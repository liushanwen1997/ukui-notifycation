/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -i notifications_adaptor.h -a :notifications_adaptor.cpp ../ukui-notifycation/org.freedesktop.Notifications.xml
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "notifications_adaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class NotificationsAdaptor
 */

NotificationsAdaptor::NotificationsAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

NotificationsAdaptor::~NotificationsAdaptor()
{
    // destructor
}

void NotificationsAdaptor::ClearRecords()
{
    // handle method call org.freedesktop.Notifications.ClearRecords
    QMetaObject::invokeMethod(parent(), "ClearRecords");
}

void NotificationsAdaptor::CloseNotification(uint id)
{
    // handle method call org.freedesktop.Notifications.CloseNotification
    QMetaObject::invokeMethod(parent(), "CloseNotification", Q_ARG(uint, id));
}

QString NotificationsAdaptor::GetAllRecords()
{
    // handle method call org.freedesktop.Notifications.GetAllRecords
    QString out0;
    QMetaObject::invokeMethod(parent(), "GetAllRecords", Q_RETURN_ARG(QString, out0));
    return out0;
}

QStringList NotificationsAdaptor::GetCapabilities()
{
    // handle method call org.freedesktop.Notifications.GetCapabilities
    QStringList out0;
    QMetaObject::invokeMethod(parent(), "GetCapabilities", Q_RETURN_ARG(QStringList, out0));
    return out0;
}

QString NotificationsAdaptor::GetRecordById(const QString &id)
{
    // handle method call org.freedesktop.Notifications.GetRecordById
    QString out0;
    QMetaObject::invokeMethod(parent(), "GetRecordById", Q_RETURN_ARG(QString, out0), Q_ARG(QString, id));
    return out0;
}

QString NotificationsAdaptor::GetRecordsFromId(int rowCount, const QString &offsetId)
{
    // handle method call org.freedesktop.Notifications.GetRecordsFromId
    QString out0;
    QMetaObject::invokeMethod(parent(), "GetRecordsFromId", Q_RETURN_ARG(QString, out0), Q_ARG(int, rowCount), Q_ARG(QString, offsetId));
    return out0;
}

QString NotificationsAdaptor::GetServerInformation(QString &name, QString &vender, QString &version)
{
    // handle method call org.freedesktop.Notifications.GetServerInformation
    //return static_cast<YourObjectType *>(parent())->GetServerInformation(name, vender, version);
}

uint NotificationsAdaptor::Notify(const QString &in0, uint replacesId, const QString &in2, const QString &in3, const QString &in4, const QStringList &in5, const QVariantMap &in6, int in7)
{
    // handle method call org.freedesktop.Notifications.Notify
    uint out0;
    QMetaObject::invokeMethod(parent(), "Notify", Q_RETURN_ARG(uint, out0), Q_ARG(QString, in0), Q_ARG(uint, replacesId), Q_ARG(QString, in2), Q_ARG(QString, in3), Q_ARG(QString, in4), Q_ARG(QStringList, in5), Q_ARG(QVariantMap, in6), Q_ARG(int, in7));
    return out0;
}

void NotificationsAdaptor::RemoveRecord(const QString &id)
{
    // handle method call org.freedesktop.Notifications.RemoveRecord
    QMetaObject::invokeMethod(parent(), "RemoveRecord", Q_ARG(QString, id));
}

